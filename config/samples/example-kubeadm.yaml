---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: metal-test
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["192.168.0.0/16"]
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: metal-test-controlplane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: MetalStackCluster
    name: metal-test
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: MetalStackCluster
metadata:
  name: metal-test
spec:
  projectID: 00000000-0000-0000-0000-000000000001
  partition: mini-lab
  firewall:
    size: v1-small-x86
    image: firewall-ubuntu-3.0
    networks:
      - internet-mini-lab
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: MetalStackMachineTemplate
metadata:
  name: metal-test-controlplane
spec:
  template:
    spec:
      image: ubuntu-24.04
      size: v1-small-x86
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: metal-test-controlplane
spec:
  replicas: 1
  version: v1.30.6
  machineTemplate:
    nodeDrainTimeout: 10m
    infrastructureRef:
      kind: MetalStackMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
      name: metal-test-controlplane
  kubeadmConfigSpec:
    format: ignition
    clusterConfiguration:
      controlPlaneEndpoint: 203.0.113.129:443
    initConfiguration:
      localAPIEndpoint:
        advertiseAddress: 10.0.0.2
        bindPort: 443
      nodeRegistration: {}
    joinConfiguration:
      controlPlane: {}
      nodeRegistration: {}
    ignition:
      containerLinuxConfig:
        additionalConfig: |
          systemd:
            units:
            - name: cluster-api-init.service
              enable: true
              contents: |-
                [Unit]
                Description=Prepares the node for bootstrapping with cluster-api kubeadm
                Before=kubeadm.service
                After=network-online.target
                Wants=network-online.target
                [Service]
                Type=oneshot
                Restart=on-failure
                RestartSec=5
                StartLimitBurst=0
                EnvironmentFile=/etc/environment
                ExecStart=/var/lib/cluster-api-init/bootstrap.sh
                [Install]
                WantedBy=multi-user.target
    files:
      - path: /var/lib/cluster-api-init/bootstrap.sh
        owner: "root:root"
        permissions: "0744"
        content: |
          #!/usr/bin/env bash
          set -eo pipefail
          set +x

          apt update
          apt install conntrack

          CNI_PLUGINS_VERSION="v1.3.0"
          DEST="/opt/cni/bin"
          mkdir -p "$DEST"
          curl -L "https://github.com/containernetworking/plugins/releases/download/${CNI_PLUGINS_VERSION}/cni-plugins-linux-amd64-${CNI_PLUGINS_VERSION}.tgz" | sudo tar -C "$DEST" -xz

          RELEASE="v1.30.6"
          cd /usr/local/bin
          sudo curl -L --remote-name-all https://dl.k8s.io/release/${RELEASE}/bin/linux/amd64/{kubeadm,kubelet,kubectl}
          sudo chmod +x {kubeadm,kubelet,kubectl}

          RELEASE_VERSION="v0.16.2"
          curl -sSL "https://raw.githubusercontent.com/kubernetes/release/${RELEASE_VERSION}/cmd/krel/templates/latest/kubelet/kubelet.service" | sed "s:/usr/bin:/usr/local/bin:g" | sudo tee /usr/lib/systemd/system/kubelet.service
          sudo mkdir -p /usr/lib/systemd/system/kubelet.service.d
          curl -sSL "https://raw.githubusercontent.com/kubernetes/release/${RELEASE_VERSION}/cmd/krel/templates/latest/kubeadm/10-kubeadm.conf" | sed "s:/usr/bin:/usr/local/bin:g" | sudo tee /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf

          systemctl enable kubelet.service
      - path: /etc/containerd/config.toml
        owner: "root:root"
        permissions: "0644"
        content: |
          disabled_plugins = []
