---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: metal-test
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["192.168.0.0/16"]
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: metal-test-controlplane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: MetalStackCluster
    name: metal-test
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: MetalStackCluster
metadata:
  name: metal-test
spec:
  projectID: 00000000-0000-0000-0000-000000000001
  partition: mini-lab
  firewall:
    size: v1-small-x86
    image: firewall-ubuntu-3.0
    networks:
    - internet-mini-lab
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: MetalStackMachineTemplate
metadata:
  name: metal-test-controlplane
spec:
  template:
    spec:
      image: ubuntu-24.04
      size: v1-small-x86
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: metal-test-controlplane
spec:
  replicas: 1
  version: v1.30.6
  machineTemplate:
    nodeDrainTimeout: 10m
    infrastructureRef:
      kind: MetalStackMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
      name: metal-test-controlplane
  kubeadmConfigSpec:
    format: ignition
    initConfiguration:
      nodeRegistration: {}
    joinConfiguration:
      controlPlane: {}
      nodeRegistration: {}
    ignition:
      containerLinuxConfig:
        additionalConfig: |
          systemd:
            units:
            - name: cluster-api-init.service
              enable: true
              contents: |-
                [Unit]
                Description=Prepares the node for bootstrapping with cluster-api kubeadm
                Before=kubeadm.service
                After=network-online.target
                Wants=network-online.target
                [Service]
                Type=oneshot
                Restart=on-failure
                RestartSec=5
                StartLimitBurst=0
                EnvironmentFile=/etc/environment
                ExecStart=/var/lib/cluster-api-init/bootstrap.sh
                [Install]
                WantedBy=multi-user.target
    files:
      - path: /var/lib/cluster-api-init/bootstrap.sh
        owner: "root:root"
        permissions: "0744"
        content: |
          #!/usr/bin/env bash
          set -eo pipefail
          set +x

          curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
          echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list

          apt-get update
          apt-get install -y kubelet kubeadm kubectl
          apt-mark hold kubelet kubeadm kubectl
      - path: /etc/containerd/config.toml
        owner: "root:root"
        permissions: "0644"
        content: |
          disabled_plugins = []
