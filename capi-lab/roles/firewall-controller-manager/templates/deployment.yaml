---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: firewall-controller-manager
  namespace: {{ firewall_controller_manager_namespace }}
  labels:
    app: firewall-controller-manager
spec:
  selector:
    matchLabels:
      app: firewall-controller-manager
  replicas: {{ firewall_controller_manager_replicas }}
  template:
    metadata:
      labels:
        app: firewall-controller-manager
{% if firewall_controller_manager_pod_annotations %}
      annotations:
{{ firewall_controller_manager_pod_annotations | to_nice_yaml | indent(width=8, first=true) }}
{% endif %}
    spec:
      serviceAccountName: firewall-controller-manager
      containers:
      - name: firewall-controller-manager
        image: {{ firewall_controller_manager_image_name }}:{{ firewall_controller_manager_image_tag }}
        imagePullPolicy: {{ firewall_controller_manager_image_pull_policy }}
        args:
          - -cert-dir=/certs
          - -log-level=info
          - -seed-api-url={{ firewall_controller_manager_seed_api_url }}
          # - -shoot-api-url={{ firewall_controller_manager_shoot_api_url }}
          # - -internal-shoot-api-url=https://kube-apiserver
          # - -cluster-id={{ firewall_controller_manager_cluster_id }}
          - -enable-leader-election
          - -metal-api-url={{ firewall_controller_manager_metalapi_url }}
          - -namespace={{ firewall_controller_manager_namespace }}
          - -shoot-kubeconfig-secret-name=none
          - -shoot-token-secret-name=none
          - -ssh-key-secret-name=none
          # - -shoot-token-path=/token
        env:
          - name: METAL_AUTH_HMAC
            valueFrom:
              secretKeyRef:
                name: firewall-controller-manager-config
                key: api-hmac
        livenessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: webhook-certs
          mountPath: "/certs"
          readOnly: true
        - name: token-dir
          mountPath: "/token"
        resources:
          limits:
            cpu: 400m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 20Mi
      volumes:
      - name: webhook-certs
        secret:
          secretName: firewall-controller-manager-certs
      - name: token-dir
        emptyDir: {}
